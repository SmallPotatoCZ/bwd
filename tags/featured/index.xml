<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>featured on EsilyZhang 的备忘单</title>
    <link>https://www.zhangchao.online/tags/featured/</link>
    <description>Recent content in featured on EsilyZhang 的备忘单</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 05 Aug 2019 20:00:38 +0800</lastBuildDate>
    
	<atom:link href="https://www.zhangchao.online/tags/featured/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>跨窗口通信</title>
      <link>https://www.zhangchao.online/web/cross-window-communication/</link>
      <pubDate>Mon, 05 Aug 2019 20:00:38 +0800</pubDate>
      
      <guid>https://www.zhangchao.online/web/cross-window-communication/</guid>
      <description>实现方式 同源限制  Cookie Webstorage - localStorage BroadcastChannel window.open  不同源的窗口内通信 父窗口：
&amp;lt;h1&amp;gt;发送端&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;键入发送的消息：&amp;lt;/p&amp;gt; &amp;lt;form name=&amp;#34;sender&amp;#34; onsubmit=&amp;#34;return sendMessage();&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;message&amp;#34; size=&amp;#34;30&amp;#34; value=&amp;#34;&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;发送&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;reset&amp;#34; value=&amp;#34;清空&amp;#34;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;iframe src=&amp;#34;http://192.168.5.125:9001/cross-window-connection/postMessage-receiver.html&amp;#34; name=&amp;#34;msg2&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;let win = window.frames.msg2; function updateMessage() { return document.forms[&amp;#39;sender&amp;#39;].elements[&amp;#39;message&amp;#39;].value; } function sendMessage() { win.postMessage(updateMessage(), &amp;#34;*&amp;#34;); return false; }  iframe 中子窗口：
&amp;lt;h1&amp;gt;接受端&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;接收到的消息：&amp;lt;/p&amp;gt; &amp;lt;form name=&amp;#34;receiver&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;message&amp;#34; size=&amp;#34;30&amp;#34; value=&amp;#34;&amp;#34; readonly disabled&amp;gt; &amp;lt;/form&amp;gt;window.addEventListener(&amp;#34;message&amp;#34;, function (event) { document.forms[&amp;#34;receiver&amp;#34;].elements[&amp;#39;message&amp;#39;].value = event.</description>
    </item>
    
    <item>
      <title>Mvvm</title>
      <link>https://www.zhangchao.online/vue/mvvm/</link>
      <pubDate>Sat, 03 Aug 2019 10:50:53 +0800</pubDate>
      
      <guid>https://www.zhangchao.online/vue/mvvm/</guid>
      <description>MVVM 响应式数据 class Vue { constructor(options) { this.options = options; this.$data = options.data; this.$el = document.querySelector(options.el); this._directive = {}; this.Observer(this.$data); this.Compile(this.$el); } Observer(data) { for (let key in data) { this._directive[key] = []; let Val = data[key]; let Watcher = this._directive[key]; // this.$data 对象里面的每一个属性发生变化 更新视图  Object.defineProperty(this.$data, key, { get: function () { return Val; }, set: function (newVal) { if (newVal !== Val) { Val = newVal; Watcher.forEach(element =&amp;gt; { element.</description>
    </item>
    
    <item>
      <title>Symbol</title>
      <link>https://www.zhangchao.online/javascript/symbol/</link>
      <pubDate>Fri, 02 Aug 2019 23:02:24 +0800</pubDate>
      
      <guid>https://www.zhangchao.online/javascript/symbol/</guid>
      <description>基础 Symbol 类型没有字面量的形式。主要作用是创建一个类字符串的不会与其它任何值冲突的值。
// 不能使用 new var sym = Symbol(&amp;#34;sym description&amp;#34;); // 识别 sym typeof sym; // sym 的字符串表示 sym.toString(); // 几乎隐藏的属性，类似元属性 var Foo = {}; Foo[sym] = &amp;#34;symbol&amp;#34;; // 不参与 for...in 的循环，但是 Object.assign 是能够将其复制 var clone = Object.assign({}, Foo);  使用 Symbol 全局搜索 (function () { var sym1 = Symbol(&amp;#34;symbol1&amp;#34;); var sym2 = Symbol(&amp;#34;symbol2&amp;#34;); })(); (function () { // 搜索全局 symbol  var sym_index1 = Symbol.for(&amp;#34;symbol1&amp;#34;); var sym_index2 = Symbol.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://www.zhangchao.online/apps/docker/</link>
      <pubDate>Fri, 02 Aug 2019 20:21:14 +0800</pubDate>
      
      <guid>https://www.zhangchao.online/apps/docker/</guid>
      <description>镜像 列出本机的所有 image 文件 docker image ls 删除 image 文件 docker image rm $imagename 从远程拉去镜像 docker image pull $group/$imagename 创建 image 文件 docker image build -t $imagename[:$version] $DockerfilePath 为本地的image标注用户名和版本 docker image tag $imagename $username/$repository:$tag # 实例 docker image tag koa-demo:0.0.1 [group]/[imagename:version] 容器 新建并重启 # 运行脚本之后终止容器 docker run $imagename /bin/echo &amp;#34;Hello World&amp;#34; # 启动一个交互的终端 # -t,--tty 启动一个伪终端；-i,--interactive 保持容器的标准输入 docker run -it $imagename /bin/bash # 启动已经终止的容器 docker container start $imagename 后台运行容器 # -d,--detach 后台运行容器 docker run -d $imagename 查看后台容器的日志 docker container logs $imagename 列出容器列表 # 正在运行的容器 docker container ls # 包括已经停止的容器 docker container ls --all 终止容器 当 Docker 容器中指定的应用终结时，容器也会自动终结</description>
    </item>
    
    <item>
      <title>Docker Machine</title>
      <link>https://www.zhangchao.online/apps/docker-machine/</link>
      <pubDate>Fri, 02 Aug 2019 20:18:05 +0800</pubDate>
      
      <guid>https://www.zhangchao.online/apps/docker-machine/</guid>
      <description> 命令行使用方法 新建虚拟机 docker-machine create --engine-registry-mirror=$mirrorurl -d $provider $vmname 删除虚拟机 docker-machine rm $vmname 从虚拟机挂载目录到主机 # 主机新建共享目录 mkdir $localpath # 虚拟机新建目录 docker-machine ssh $vmname mkdir $vmpath # 挂载目录 docker-machine mount $vmname:$vmpath $localpath ssh 连接虚拟机 dokcer-machine --native-ssh ssh $vmname $command 使用例子 新建配置阿里云镜像地址的 Docker 虚拟机  官网地址
 先按照官网进行注册。
# 创建指定 docker 镜像的虚拟机 default docker-machine create --engine-registry-mirror=$alimirrorurl -d $provider default # 关闭虚拟机，新增固定共享目录 vboxmanage controlvm default savestate vboxmanage controlvm default poweroff vboxmanage sharedfolder add default --name $sharename --hostpath $hostpath vboxmanage startvm default --type headless # 新建共享目录 docker-machine ssh default sudo mkdir $vmpath # 修改目录权限 docker-machine ssh default sudo chmod 777 $vmpath # 挂载共享目录 docker-machine ssh default sudo mount -t vboxsf -o uid=1000,gid=1000 $sharename $vmpath 参考链接  docker-machine 官网  </description>
    </item>
    
    <item>
      <title>Bash 命令行</title>
      <link>https://www.zhangchao.online/cli/bash/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.zhangchao.online/cli/bash/</guid>
      <description>if 语法 if test-command; then consequesnt-commands; [elif more-test-commands; then more-consequesnt;] [else alternate-consequesnt;] fi for 语法 # words 不指定，只执行一次 for name [in words ...]; do commands; done for (( expr1; expr2 )); do commands; done # 等价于 (( expr1 )) while (( expr2 ));do commands done words file1.txt file2.txt file3.txt # 或者 Apple Sony &amp;#34;Hewlett Packard&amp;#34; 通配符 * 表示的是文件夹中的文件名字
for thisfile in *; do echo &amp;#34;found $thisfile&amp;#34;; done 例子 1 - 10 for i in `seq 1 10` do echo &amp;#34;$i&amp;#34;; done # 大括号实现 for i in {1.</description>
    </item>
    
    <item>
      <title>Vim 常用命令</title>
      <link>https://www.zhangchao.online/apps/vim/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.zhangchao.online/apps/vim/</guid>
      <description>文件 I/O 打开文件    目标 命令 备注     打开新的文件 :e &amp;lt;file&amp;gt; 支持通配符，如：**/&amp;lt;file&amp;gt;   垂直方向新建窗口并打开新建的文件 :new    水平方向新建窗口并打开新建的文件 :vnem    在当前窗口打开新的文件 :enew    在新的标签窗口打开新的文件 :tabnew    读文件内容 :r[ead] &amp;lt;file&amp;gt; 在锚点处添加&amp;lt;file&amp;gt;的内容    保存文件    目标 命令 备注     保存当前文件 :w    保存所有文件 :wa    当前文件另存为 :saves &amp;lt;file-name&amp;gt;     暂存文件操作    目标 命令     暂存文件列表 :ls   关闭当前缓存 :bd[elete]   跳转下一个标签页 :bn[ext]   跳转上一个标签页 :bp[revious]    视图 窗口    目标 命令     垂直方向切分窗口 :split   水平方向切分窗口 :vsplit   窗口间移动锚点 ^w + &amp;lt;direction key&amp;gt;   关闭当前窗口 ^w + d    标签页    目标 命令 备注     创建新的空标签页 :tabn[ew]    在新的标签页打开文件 :tabe[dit] &amp;lt;file or path&amp;gt;    切换标签页 :tabm[ove] &amp;lt;numeric value&amp;gt; 如：:tabm-1, :tabm+3（相对），:tabm 2（绝对）    文本编辑    目标 命令     编辑模式 i   在下一行新建一行并开始编辑 o   跳转到行的开始并开始编辑 I   跳转到行的结尾并开始编辑 A    缩进，制表符和空格    目标 命令 备注     开启空格格式的制表符 :set expandtab    设置制表符空格的数量 :set tabstop=&amp;lt;x&amp;gt; 一个制表符由x个空格组成。 softtabstop开启它不会生效   设置退格键删除的空格数量 :set softtabstop=&amp;lt;x&amp;gt; 一个退格键由x个空格组成。   设置制表符空格的数量 :set shiftwidth=&amp;lt;x&amp;gt; 每一级缩进的x个空格。只有expandtab开启，才会生效。   开启真正的制表符 :set noexpantab 返回默认的制表符格式    删除行    目标 命令 备注     删除行 dd    清除锚点到行尾的内容 D    清除整行内容 0D 0 移动锚点到行开始   清除整行并以插入模式结束 S     文本选择    目标 命令 备注     字选择 v    块选择 ^ 字选择模式下，^ + &amp;lt;direction key&amp;gt;   行选择 V    选中下个锚点的字 viw    选择括号内的内容 vi[parenthesis] 如：vi(、vi[和vi{   选择括号内的内容 vi[parenthesis] 如：vi(、vi[和vi{   选择括号内的内容（花括号） vib 如上：vi{    文本导航    目的 命令     移动到行开始 0   移动到行尾 $   移动到行中的第一个非空字符 _   移动到行中的最后一个非空字符 g_   移动到第一行 gg   移动到最后一行 G   回退上一个位置 &#39;&#39;    文本的显示模式    目标 命令 备注     单词换行 :set wrap    显示换行符 :set linebreak    高亮当前行 :set cursorline    显示垂直行 :set colorcolumn=&amp;lt;x&amp;gt; x 是列号码   显示所有的空白 :set list    自动换行 :set textwidth=&amp;lt;x&amp;gt; 文本在您键入时自动换行，以使每行最多长 &amp;lt;x&amp;gt; 个字符    文件浏览 打开浏览器窗口    目的 命令     在当前窗口打开文件浏览器 Ex[plore]   在垂直方向新建的窗口打开文件浏览器 Sex[plore]   在水平方向新建的窗口打开文件浏览器 Vex[plore]   在新的标签页打开文件浏览窗口 Tex[plore]    浏览器操作    目标 命令 备注     改变显示模式 i 在正常、列表和树模式间切换   创建新的文件夹 d    创建新的文件 %    删除文件或文件夹 D    重命名文件或文件夹 R     其它    目标 命令 备注     其它命令 :!</description>
    </item>
    
    <item>
      <title>ES2015&#43;</title>
      <link>https://www.zhangchao.online/javascript/es6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.zhangchao.online/javascript/es6/</guid>
      <description>语法 块作用域声明 let var a = 2; { let a = 3; console.log(&amp;#34;块作用域&amp;#34;, a); } console.log(&amp;#34;函数作用域&amp;#34;, a);  const { const a = 2; console.log(a); // 2  a = 3; // TypeError } // 常量不是对这个值本身的限制，而是对赋值的哪个变量的限制 { const a = [1, 2, 3]; a.push(4); console.log(a); // [1, 2, 3, 4]  a = 42; // TypeError }  块作用域函数 { foo(); function foo(){} } foo(); // ReferenceError  spread/rest spread function foo(a, b, c){ console.</description>
    </item>
    
    <item>
      <title>JavaScript 面试题</title>
      <link>https://www.zhangchao.online/interview-question/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.zhangchao.online/interview-question/javascript/</guid>
      <description>JavaScript 修改以下 print 函数，使之输出 0 到 99，或者 99 到 0  只能修改 setTimeout 到 Math.floor(Math.random() * 1000 的代码 不能修改 Math.floor(Math.random() * 1000 不能使用全局变量  代码 function print(n){ setTimeout(() =&amp;gt; { console.log(n); }, Math.floor(Math.random() * 1000)); } for(var i = 0; i &amp;lt; 100; i++){ print(i); }  关键 将输出执行脱离异步定时器，变为立即执行。
答案 function print(n){ setTimeout((() =&amp;gt; { console.log(n); return null; })(), Math.floor(Math.random() * 1000)); } for(var i = 0; i &amp;lt; 100; i++){ print(i); }  请写出如下代码的打印结果 代码 function Foo() { Foo.</description>
    </item>
    
    <item>
      <title>Sass</title>
      <link>https://www.zhangchao.online/css/sass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.zhangchao.online/css/sass/</guid>
      <description>Basics {: .-three-column}
Variables $red: #833;body { color: $red; } Nesting .markdown-body { p { color: blue; } &amp;amp;:hover { color: red; } } Comments /* Block comments */ // Line comments Mixins @mixinheading-font { font-family: sans-serif; font-weight: bold; }h1 { @includeheading-font; } with parameters @mixinfont-size($n) { font-size: $n * 1.2em; }body { @includefont-size(2); } with default values @mixinpad($n: 10px) { padding: $n; }body { @includepad(15px); } with a default variable // Set a default value $default-padding: 10px;@mixinpad($n: $default-padding) { padding: $n; }body { @includepad(15px); } Extend .</description>
    </item>
    
    <item>
      <title>Visual Studio Code</title>
      <link>https://www.zhangchao.online/apps/vscode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.zhangchao.online/apps/vscode/</guid>
      <description>Shortcuts Command palette    Key Description     ⇧⌘P Show all commands   ⇧⌘P Show all commands   ⌘P Show files    Sidebars    Key Description     ⌘B Toggle sidebar   ⇧⌘E Explorer   ⇧⌘F Search   ⇧⌘D Debug   ⇧⌘X Extensions   ⇧^G Git (SCM)    Search    Key Description     ⌘F Find   ⌥⌘F Replace   ⇧⌘F Find in files   ⇧⌘H Replace in files    Panel    Key Description     ⌘J Toggle panel   ⇧⌘M Problems   ⇧⌘U Output   ⇧⌘Y Debug console   ^` Terminal    View    Key Description     ⌘k z Zen mode   ⌘k u Close unmodified   ⌘k w Close all    Debug    Key Description     F5 Start   ⇧F5 Stop   ⇧⌘F5 Restart   ^F5 Start without debugging   F9 Toggle breakpoint   F10 Step over   F11 Step into   ⇧F11 Step out   ⇧⌘D Debug sidebar   ⇧⌘Y Debug panel    References  Keyboard shortcuts (MacOS) (code.</description>
    </item>
    
    <item>
      <title>Web 通用知识面试题</title>
      <link>https://www.zhangchao.online/interview-question/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.zhangchao.online/interview-question/web/</guid>
      <description> 安全 介绍下前端加密的常见场景和方法 协议 介绍下 HTTPS 中间人攻击 </description>
    </item>
    
  </channel>
</rss>